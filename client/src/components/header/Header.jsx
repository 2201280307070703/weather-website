import { useEffect, useState, useContext } from 'react';
import { NavLink } from 'react-router-dom';
import { LocationContext } from '../../contexts/locationContext';
import AuthenticationContext from '../../contexts/authenticationContext';
import Path from '../../paths';
import * as weatherService from '../../services/weatherService';
import './Header.css';

export default function Header() {
  const { location, loading } = useContext(LocationContext);
  const { isAuthenticated, email } = useContext(AuthenticationContext);
  const [weather, setWeather] = useState(null);
  const [menuOpen, setMenuOpen] = useState(false);

  useEffect(() => {
    if (!loading) {
      weatherService.getCurrentWeatherState(location.latitude, location.longitude)
        .then(setWeather)
        .catch((error) => {
          console.log(`Header error: ${error}`);
        });
    }
  }, [loading, location.latitude, location.longitude]);

  return (
    <header className={(weather ? weather : 'default')}>
      <h1><NavLink to={Path.Home}>üåûSunnySide</NavLink></h1>
      <div className='burger' onClick={() => setMenuOpen(!menuOpen)}>&#9776;</div>
      <nav className={menuOpen ? 'open' : ''}>
        <div className='pages'>
          <NavLink to={Path.Today} className={({ isActive }) => isActive ? 'navLink active' : 'navLink'}>–î–Ω–µ—Å</NavLink>
          <NavLink to={Path.Hourly} className={({ isActive }) => isActive ? 'navLink active' : 'navLink'}>–ü–æ—á–∞—Å–æ–≤–æ</NavLink>
          <NavLink to={Path.ForFiveDays} className={({ isActive }) => isActive ? 'navLink active' : 'navLink'}>–ó–∞ 3 –¥–Ω–∏</NavLink>
          <NavLink to={Path.Astro} className={({ isActive }) => isActive ? 'navLink active' : 'navLink'}>–ù–µ–±–µ—Å–Ω–∏ —Å–≤–µ—Ç–∏–ª–∞</NavLink>
          <NavLink to={Path.TodayVSLastYear} className={({ isActive }) => isActive ? 'navLink active' : 'navLink'}>–î–Ω–µ—Å vs –º–∏–Ω–∞–ª–∞—Ç–∞ –≥–æ–¥–∏–Ω–∞</NavLink>
          <NavLink to={Path.Recommendations} className={({ isActive }) => isActive ? 'navLink active' : 'navLink'}>–ü—Ä–µ–ø–æ—Ä—ä–∫–∏</NavLink>
        </div>
        <div className='auth'>
          {isAuthenticated ? (
            <>
              <NavLink to={Path.Logout} className={({ isActive }) => isActive ? 'navLink active' : 'navLink'}>–ò–∑—Ö–æ–¥</NavLink>
              <NavLink to={Path.UserInfo}  className='email'>| {email.split('@')[0]}</NavLink>
            </>
          ) : (
            <>
              <NavLink to={Path.Login} className={({ isActive }) => isActive ? 'navLink active' : 'navLink'}>–í–ª–∏–∑–∞–Ω–µ</NavLink>
              <NavLink to={Path.Register} className={({ isActive }) => isActive ? 'navLink active' : 'navLink'}>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</NavLink>
            </>
          )}
        </div>
      </nav>
    </header>
  );
};