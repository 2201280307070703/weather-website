const cron = require('node-cron');

const userService = require('../services/userService');
const weatherService = require('../services/weatherService');
const notificationService = require('../services/notificationService');

function startWeatherNotifier() {
  cron.schedule('0 8 * * *', async () => {
    try {
      const users = await userService.getUsersWithEnabledNotifications();

      for (let user of users) {
        try {
          const weather = await weatherService.getWeatherByCity(user.city);
          const dailyMinTemp = weather.forecast.forecastday[0].day.mintemp_c;
          const dailyMaxTemp = weather.forecast.forecastday[0].day.maxtemp_c;

          if (dailyMinTemp <= user.minTemp) {
            await notificationService.sentEmail(
              user.email,
              '‚ùÑÔ∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ú–Ω–æ–≥–æ –Ω–∏—Å–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!',
              `–¢–æ–≤–∞ –µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –≤—Ä–µ–º–µ—Ç–æ, –∫–æ–µ—Ç–æ –≤–∏ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–∞, —á–µ –º–∏–Ω–∏–º–∞–ª–Ω–∞—Ç–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤—ä–≤ –≤–∞—à–∏—è –≥—Ä–∞–¥ - ${user.city} —Å–µ –æ—á–∞–∫–≤–∞ –¥–∞ –ø–∞–¥–Ω–µ –ø–æ–¥ –∑–∞–¥–∞–¥–µ–Ω–∏—è –æ—Ç –≤–∞—Å –ø—Ä–∞–≥ –æ—Ç ${user.minTemp}¬∞C. –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–∞–Ω–∞ –º–∏–Ω–∏–º–∞–ª–Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${dailyMinTemp}¬∞C.`
            );
          }

          if (dailyMaxTemp >= user.maxTemp) {
            await notificationService.sentEmail(
              user.email,
              'üî• –í–Ω–∏–º–∞–Ω–∏–µ: –ú–Ω–æ–≥–æ –≤–∏—Å–æ–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!',
              `–¢–æ–≤–∞ –µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –≤—Ä–µ–º–µ—Ç–æ, –∫–æ–µ—Ç–æ –≤–∏ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–∞, —á–µ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞—Ç–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤—ä–≤ –≤–∞—à–∏—è –≥—Ä–∞–¥ - ${user.city} —Å–µ –æ—á–∞–∫–≤–∞ –¥–∞ –Ω–∞–¥–≤–∏—à–∏ –∑–∞–¥–∞–¥–µ–Ω–∏—è –æ—Ç –≤–∞—Å –ø—Ä–∞–≥ –æ—Ç ${user.maxTemp}¬∞C. –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–∞–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${dailyMaxTemp}¬∞C.`
            );
          }
        }
        catch (userError) {
          console.error(`Failed to process user ${user.email}:`, userError);
        }
      }
    }
    catch (error) {
      console.error('Weather notifier failed:', error);
    }
  });
}

module.exports = startWeatherNotifier;
